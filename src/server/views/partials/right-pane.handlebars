<div class="{{css.rightPane}}">
  <div class="{{css.rightPane}}__toolbar">
    {{#>tabs id='TemplateTabs'}}
      {{>tab name='template' value='html' id=(concat css.rightPane '-html-radio' '') checked=true title='HTML'}}
      {{>tab name='template' value='markdown' id=(concat css.rightPane '-markdown-radio' '') title='Markdown'}}
    {{/tabs}}
    <div class="{{css.rightPane}}__toolbar__content {{css.rightPane}}__toolbar__content--right">
      {{>button button=true class='js-download-docs' icon='fas fa-cloud-download-alt' size='small' title='Download'}}
    </div>
    <div id="toolbar-error" class="{{css.rightPane}}__toolbar__error"></div>
  </div>
  <div class="errors-wrapper errors-wrapper--hidden">
    <h1>We found the following errors in your AsyncAPI document:</h1>
    <pre><code id="document-errors"></code></pre>
  </div>
  <iframe id="result" style="width: 100%; height: 100%; border: none; background-color: white;"
    src="/html/template"></iframe>
</div>

<style>
.{{css.rightPane}} {
  display: flex;
  flex-direction: column;
  position: fixed;
  left: 50%;
  top: 50px;
  right: 0;
  bottom: 0;
  overflow: auto;
}

.{{css.leftPane}}--collapsed ~ .{{css.rightPane}} {
  left: 0;
}

.{{css.rightPane}}__toolbar {
  display: flex;
  flex-direction: row;
  padding: 10px 15px;
  background-color: #526975;
  box-shadow: rgba(0,0,0,.75) 0 0 5px;
  z-index: 5;
}

.{{css.rightPane}}__toolbar__content {
  flex-grow: 1;
}

.{{css.rightPane}}__toolbar__content--right {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.{{css.rightPane}} .errors-wrapper {
  position: absolute;
  padding: 20px;
  background-color: #c1332f;
  color: white;
  top: 58px;
  width: 100%;
  transition: .3s ease-in-out;
}

.{{css.rightPane}} .errors-wrapper--hidden {
  top: -100%;
}

.{{css.rightPane}} .errors-wrapper h1 {
  font-size: 16px;
}

.{{css.rightPane}} .errors-wrapper pre,
.{{css.rightPane}} .errors-wrapper code {
  background-color: #263238;
  white-space: pre-wrap;
  word-break: break-word;
}

.{{css.rightPane}} .errors-wrapper pre {
  padding: 20px;
}
</style>

<script>
(() => {
  const App = document.querySelector('{{app}}');
  const templateTabs = document.getElementById('TemplateTabs');

  templateTabs.addEventListener('selectTab', (e) => {
    const iframe = document.getElementById('result');
    iframe.onload = () => { // Use onload instead of addEventListener to listen the event just once.
      App.dispatchEvent(new CustomEvent('templateChange', { detail: e.detail }));
    };

    switch(e.detail) {
      case 'html':
        iframe.contentWindow.location = '/html/template';
        break;
      case 'markdown':
        iframe.contentWindow.location = '/markdown/template';
        break;
    }
  });

  document.querySelector('.js-download-docs').addEventListener('click', function () {
    App.dispatchEvent(new CustomEvent('downloadDocs'));
  });

  const urlParams = new URLSearchParams(window.location.search);
  const templateParam = urlParams.get('template');
  
  switch (templateParam) {
    case 'markdown': {
      const markdownTab = templateTabs.querySelector('input[value="markdown"]');
      markdownTab.checked = true;
      templateTabs.dispatchEvent(new CustomEvent('selectTab', { detail: 'markdown' }));
      break;
    }
    // html is opened by default
  }
})();
</script>
